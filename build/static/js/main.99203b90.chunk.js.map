{"version":3,"sources":["components/VirtualizedSortableTable.js","components/SearchableTable.js","components/Leaderboard.js","components/ServerStatus.js","components/Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["VirtualizedSortableTable","props","useState","sortedData","setSortedData","orderBy","setOrderBy","SortDirection","DESC","order","setOrder","useEffect","defaultOrder","defaultOrderBy","_","data","toLocaleLowerCase","handleSort","defaultSortDirection","event","sortBy","newDirection","sortDirection","ASC","width","height","rowHeight","headerHeight","sort","rowCount","length","rowGetter","index","columns","map","dataKey","label","SearchableTable","undefined","filteredData","setFilteredData","searchTerm","setSearchTerm","filtered","filter","d","match","keys","Object","i","ignoreSearchColumns","indexOf","toString","toLowerCase","style","placeholder","value","onChange","e","target","type","Leaderboard","leaderboardRecords","setLeaderboardRecords","loading","setLoading","fetch","then","res","json","finally","isDesktop","window","matchMedia","matches","Typography","variant","className","gutterBottom","CircularProgress","color","ServerStatus","serverInfo","setServerInfo","playerList","setPlayerList","p","player","kda","split","withRouter","navigate","page","toggleDrawer","history","push","Fragment","Drawer","anchor","open","classes","paper","Toolbar","List","ListItem","button","onClick","ListItemText","primary","App","React","setOpen","AppBar","position","clsx","IconButton","aria-label","edge","noWrap","path","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99203b90.chunk.js","sourcesContent":["import React, { useState, useEffect, } from 'react';\r\nimport _ from 'lodash';\r\nimport { AutoSizer, Column, SortDirection, Table } from 'react-virtualized';\r\nimport 'react-virtualized/styles.css';\r\n\r\nfunction VirtualizedSortableTable(props) {\r\n    const [sortedData, setSortedData] = useState([]);\r\n    const [orderBy, setOrderBy] = useState();\r\n    const [order, setOrder] = useState(SortDirection.DESC);\r\n\r\n    useEffect(() => {\r\n        if (props.defaultOrder) {\r\n            setOrder(props.defaultOrder);\r\n        }\r\n        if (props.defaultOrderBy) {\r\n            setOrderBy(props.defaultOrderBy);\r\n        }\r\n    }, [props.defaultOrderBy, props.defaultOrder])\r\n\r\n    useEffect(() => {\r\n        setSortedData(_.orderBy(props.data, [orderBy], order.toLocaleLowerCase()));\r\n    }, [props.data, orderBy, order])\r\n\r\n    const handleSort = ({ defaultSortDirection, event, sortBy, sortDirection }) => {\r\n        const isAsc = orderBy === sortBy && order === SortDirection.ASC;\r\n        let newDirection = isAsc ? SortDirection.DESC : SortDirection.ASC;\r\n        setOrder(newDirection);\r\n        setOrderBy(sortBy);\r\n    };\r\n\r\n    return (\r\n        <AutoSizer>\r\n            {({ width, height }) => (\r\n                <Table\r\n                    height={height}\r\n                    width={width}\r\n                    rowHeight={40}\r\n                    headerHeight={40}\r\n                    sortBy={orderBy}\r\n                    sort={handleSort}\r\n                    rowCount={sortedData.length}\r\n                    rowGetter={({ index }) => sortedData[index]}\r\n                >\r\n                    {props.columns.map(({ dataKey, label, width }) => {\r\n                        return (\r\n                            <Column\r\n                                width={width ? width : 200}\r\n                                key={dataKey}\r\n                                dataKey={dataKey}\r\n                                label={label}\r\n                            />\r\n                        );\r\n                    })}\r\n                </Table>\r\n            )}\r\n        </AutoSizer>\r\n\r\n    );\r\n}\r\nexport default VirtualizedSortableTable;\r\n","import _ from 'lodash';\r\nimport React, { useState, useEffect, } from 'react';\r\nimport VirtualizedSortableTable from './VirtualizedSortableTable';\r\n\r\nfunction SearchableTable(props) {\r\n    const [filteredData, setFilteredData] = useState(undefined);\r\n    const [searchTerm, setSearchTerm] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        let filtered = _.filter(props.data, (d) => {\r\n            let match = false;\r\n            let keys = Object.keys(d);\r\n            for(let i = 0; i < keys.length; i++){\r\n                if(match) break;\r\n                if(props.ignoreSearchColumns) {\r\n                    if(props.ignoreSearchColumns.indexOf(keys[i]) > -1) continue;\r\n                }\r\n                if (d[keys[i]]) {\r\n                    if(d[keys[i]].toString().toLowerCase().indexOf(searchTerm.toLowerCase()) > -1) {\r\n                        match = true;\r\n                    }\r\n                }\r\n            }\r\n            return match;\r\n        })\r\n        setFilteredData(filtered)\r\n    }, [searchTerm, props.data, props.ignoreSearchColumns]);\r\n\r\n    const updateInput = (e) => {\r\n        setSearchTerm(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div style={{ height: '600px' }}>\r\n            <input placeholder=\"Search\" value={searchTerm} onChange={updateInput} type=\"text\" />\r\n            <hr />\r\n            {filteredData && filteredData.length > 0 &&\r\n                <VirtualizedSortableTable\r\n                    data={filteredData}\r\n                    columns={props.columns}\r\n                    defaultOrderBy={props.defaultOrderBy}\r\n                />\r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default SearchableTable;\r\n","import React, { useState, useEffect, } from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Typography } from '@material-ui/core';\r\nimport SearchableTable from './SearchableTable';\r\n\r\nfunction Leaderboard() {\r\n    const [leaderboardRecords, setLeaderboardRecords] = useState(undefined);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (leaderboardRecords) {\r\n            return\r\n        }\r\n        setLoading(true);\r\n        fetch('/api/leaderboard/get').then(res => res.json())\r\n            .then(data => {\r\n                setLeaderboardRecords(data);\r\n            }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n    }, [leaderboardRecords]);\r\n\r\n    let isDesktop = window.matchMedia(\"(min-width: 1281px)\").matches;\r\n    const columns = [\r\n        { dataKey: 'name', label: 'Player', width: isDesktop ? 400 : 300 },\r\n        { dataKey: 'kills', label: isDesktop ? 'Kills' : \"K\", width: isDesktop ? 300 : 75 },\r\n        { dataKey: 'deaths', label: isDesktop ? 'Deaths' : \"D\", width: isDesktop ? 300 : 75 },\r\n        { dataKey: 'points', label: isDesktop ? 'Points' : \"P\", width: isDesktop ? 300 : 75 },\r\n    ]\r\n\r\n    return (\r\n        <div style={{ height: '600px'}}>\r\n            <Typography variant='h4' className=\"header\" gutterBottom>Preseason Leaderboard</Typography>\r\n            {loading &&\r\n                <CircularProgress color='secondary' />\r\n            }\r\n            {!loading &&\r\n                <SearchableTable\r\n                    data={leaderboardRecords}\r\n                    columns={columns}\r\n                    defaultOrderBy=\"kills\"\r\n                    ignoreSearchColumns={[\"steamId\"]}\r\n                />\r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Leaderboard;\r\n","import React, { useState, useEffect, } from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VirtualizedSortableTable from './VirtualizedSortableTable';\r\n\r\nfunction ServerStatus() {\r\n  const [serverInfo, setServerInfo] = useState(undefined);\r\n  const [playerList, setPlayerList] = useState(undefined);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (serverInfo) {\r\n      return\r\n    }\r\n    setLoading(true);\r\n    fetch('/api/server').then(res => res.json())\r\n      .then(data => {\r\n        setServerInfo(data[\"ServerInfo\"]);\r\n        if (data[\"Scores\"]) {\r\n          setPlayerList(data[\"Scores\"].map(p => {\r\n            let player = p[\"PlayerInfo\"];\r\n            let kda = player[\"KDA\"].split(\"/\");\r\n            return {\r\n              'kills': kda[0],\r\n              'deaths': kda[1],\r\n              'points': player[\"Score\"],\r\n              'steamId': player[\"UniqueId\"],\r\n              'name': player[\"PlayerName\"],\r\n              'team': player[\"TeamId\"]\r\n            }\r\n          }));\r\n        }\r\n\r\n      }).finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [serverInfo]);\r\n\r\n  let isDesktop = window.matchMedia(\"(min-width: 1281px)\").matches;\r\n  const columns = [\r\n    { dataKey: 'name', label: 'Player', width: isDesktop ? 400 : 200 },\r\n    { dataKey: 'kills', label: isDesktop ? 'Kills' : \"K\", width: isDesktop ? 300 : 100 },\r\n    { dataKey: 'deaths', label: 'Deaths', width: isDesktop ? 300 : 100 },\r\n    { dataKey: 'points', label: 'Points', width: isDesktop ? 300 : 100 },\r\n  ]\r\n\r\n\r\n  return (\r\n    <div style={{ height: '600px' }}>\r\n      {serverInfo &&\r\n        <div className=\"header\">\r\n          <Typography variant='h5' gutterBottom>{serverInfo[\"ServerName\"]}</Typography>\r\n          <p>Map: {serverInfo[\"MapLabel\"]}</p>\r\n          <p>Mode: {serverInfo[\"GameMode\"]}</p>\r\n          <p>Players: {serverInfo[\"PlayerCount\"]}</p>\r\n        </div>\r\n      }\r\n      {loading &&\r\n        <CircularProgress color='secondary' />\r\n      }\r\n      {!loading && playerList && playerList.length > 0 &&\r\n        <VirtualizedSortableTable\r\n          data={playerList}\r\n          columns={columns}\r\n          defaultOrderBy=\"kills\"\r\n        />\r\n      }\r\n    </div>\r\n\r\n  );\r\n}\r\nexport default ServerStatus;\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport {\r\n  withRouter\r\n} from \"react-router-dom\";\r\n\r\nfunction Navigation(props) {\r\n  const navigate = (page) => {\r\n    props.toggleDrawer()\r\n    props.history.push(page)\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <Drawer\r\n        className={\"drawer mobile\"}\r\n        variant=\"temporary\"\r\n        anchor=\"left\"\r\n        open={props.open}\r\n        classes={{ paper: \"drawer\" }}\r\n      >\r\n        <Toolbar />\r\n                <List>\r\n            <ListItem button onClick={() => navigate(\"/\")}>\r\n                <ListItemText primary={\"Home\"}  />\r\n            </ListItem>\r\n            <ListItem button onClick={() => navigate(\"/server\")}>\r\n                <ListItemText primary={\"Server Status\"}  />\r\n            </ListItem>\r\n            <ListItem button onClick={() => navigate(\"/leaderboard\")}>\r\n                <ListItemText primary={\"Leaderboard\"} />\r\n            </ListItem>\r\n          </List> \r\n      </Drawer>\r\n    <Drawer\r\n        className={\"drawer desktop\"}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={true}\r\n        classes={{ paper: \"drawer\" }}\r\n      >\r\n        <Toolbar />\r\n                <List>\r\n            <ListItem button onClick={() =>  navigate(\"/\")}>\r\n                <ListItemText primary={\"Home\"}  />\r\n            </ListItem>\r\n            <ListItem button onClick={() => navigate(\"/server\")}>\r\n                <ListItemText primary={\"Server Status\"}  />\r\n            </ListItem>\r\n            <ListItem button onClick={() => navigate(\"/leaderboard\")}>\r\n                <ListItemText primary={\"Leaderboard\"} />\r\n            </ListItem>\r\n          </List> \r\n      </Drawer>\r\n      </React.Fragment>\r\n    \r\n  );\r\n}\r\n\r\nexport default withRouter(Navigation);\r\n","import React from 'react';\nimport './App.css';\nimport Leaderboard from './components/Leaderboard';\nimport ServerStatus from './components/ServerStatus';\nimport Navigation from './components/Navigation';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport clsx from 'clsx';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nfunction App(props) {\n  const [open, setOpen] = React.useState(false);\n  return (\n    <Router>\n      <div className=\"App\">\n        <AppBar\n          position=\"fixed\"\n          className={clsx(\"appBar\", open && \"appBarshift\")}\n        >\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={() => setOpen(!open)}\n              edge=\"start\"\n              className={clsx(\"menuButton mobile\")}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" noWrap>\n              VR Together\n          </Typography>\n          </Toolbar>\n        </AppBar>\n        <Navigation toggleDrawer={() => setOpen(!open)} open={open} />\n        <Toolbar />\n        <Switch>\n          <Route path=\"/leaderboard\">\n            <Container>\n              <Leaderboard />\n            </Container>\n          </Route>\n          <Route path=\"/server\">\n            <Container>\n              <ServerStatus />\n            </Container>\n          </Route>\n          <Route path=\"/\">\n            <Container>\n              <Typography className=\"header\" variant='h4'>VR-Together Pavlov</Typography>\n            </Container>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}