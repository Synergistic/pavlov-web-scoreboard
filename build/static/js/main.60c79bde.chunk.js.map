{"version":3,"sources":["components/VirtualizedSortableTable.js","components/Leaderboard.js","components/ServerStatus.js","components/Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["VirtualizedSortableTable","props","useState","undefined","sortedData","setSortedData","orderBy","setOrderBy","SortDirection","DESC","order","setOrder","useEffect","defaultOrder","defaultOrderBy","_","data","toLocaleLowerCase","handleSort","defaultSortDirection","event","sortBy","newDirection","sortDirection","ASC","Fragment","header","Typography","variant","className","gutterBottom","length","width","height","rowHeight","headerHeight","sort","rowCount","rowGetter","index","columns","map","dataKey","label","Leaderboard","leaderboardRecords","setLeaderboardRecords","loading","setLoading","fetch","then","res","json","finally","isDesktop","window","matchMedia","matches","style","marginTop","CircularProgress","ServerStatus","serverInfo","setServerInfo","playerList","setPlayerList","p","player","kda","split","withRouter","navigate","page","toggleDrawer","history","push","Drawer","anchor","open","classes","paper","Toolbar","List","ListItem","button","onClick","ListItemText","primary","App","React","setOpen","AppBar","position","clsx","IconButton","color","aria-label","edge","noWrap","path","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAmEeA,MA7Df,SAAkCC,GAAQ,IAAD,EACDC,wBAASC,GADR,mBAC9BC,EAD8B,KAClBC,EADkB,OAEPH,qBAFO,mBAE9BI,EAF8B,KAErBC,EAFqB,OAGXL,mBAASM,IAAcC,MAHZ,mBAG9BC,EAH8B,KAGvBC,EAHuB,KAKrCC,qBAAU,WACFX,EAAMY,cACNF,EAASV,EAAMY,cAEfZ,EAAMa,gBACNP,EAAWN,EAAMa,kBAEtB,CAACb,EAAMa,eAAgBb,EAAMY,eAEhCD,qBAAU,WACNP,EAAcU,IAAET,QAAQL,EAAMe,KAAM,CAACV,GAAUI,EAAMO,wBACtD,CAAChB,EAAMe,KAAMV,EAASI,IAEzB,IAAMQ,EAAa,SAAC,GAA2D,EAAzDC,qBAAyD,EAAnCC,MAAoC,IAA7BC,EAA4B,EAA5BA,OAE3CC,GAFuE,EAApBC,cACzCjB,IAAYe,GAAUX,IAAUF,IAAcgB,IACjChB,IAAcC,KAAOD,IAAcgB,KAC9Db,EAASW,GACTf,EAAWc,IAGf,OACI,eAAC,IAAMI,SAAP,WACKxB,EAAMyB,QAAU,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,SAASC,cAAY,EAAxD,SAA0D7B,EAAMyB,SACjF,8BACKtB,GAAcA,EAAW2B,OAAS,GAC/B,cAAC,IAAD,UACK,gBAAGC,EAAH,EAAGA,MAAH,OACG,cAAC,IAAD,CACIC,OAAQ,IACRD,MAAOA,EACPE,UAAW,GACXC,aAAc,GACdd,OAAQf,EACR8B,KAAMlB,EACNmB,SAAUjC,EAAW2B,OACrBO,UAAW,gBAAGC,EAAH,EAAGA,MAAH,OAAenC,EAAWmC,IARzC,SAUKtC,EAAMuC,QAAQC,KAAI,YAAgC,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,MAAOX,EAAY,EAAZA,MAClC,OACI,cAAC,IAAD,CACIA,MAAOA,GAAgB,IAEvBU,QAASA,EACTC,MAAOA,GAFFD,iB,SCJlCE,MA5Cf,WAAwB,IAAD,EACiC1C,wBAASC,GAD1C,mBACZ0C,EADY,KACQC,EADR,OAEW5C,oBAAS,GAFpB,mBAEZ6C,EAFY,KAEHC,EAFG,KAInBpC,qBAAU,WACFiC,IAGJG,GAAW,GACXC,MAAM,wBAAwBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACzCF,MAAK,SAAAlC,GACF8B,EAAsB9B,MACvBqC,SAAQ,WACPL,GAAW,SAEpB,CAACH,IAEJ,IAAIS,EAAYC,OAAOC,WAAW,uBAAuBC,QACnDjB,EAAU,CACZ,CAAEE,QAAS,OAAQC,MAAO,SAAUX,MAAOsB,EAAY,IAAM,KAC7D,CAAEZ,QAAS,QAASC,MAAO,QAASX,MAAOsB,EAAY,IAAM,KAC7D,CAAEZ,QAAS,SAAUC,MAAO,SAAUX,MAAOsB,EAAY,IAAM,KAC/D,CAAEZ,QAAS,SAAUC,MAAO,SAAUX,MAAOsB,EAAY,IAAM,MAGnE,OACI,eAAC,IAAM7B,SAAP,WACKsB,GACG,qBAAKW,MAAO,CAAEC,UAAW,QAAzB,SACI,cAACC,EAAA,EAAD,OAGNb,GACE,cAAC,EAAD,CACI/B,KAAM6B,EACNL,QAASA,EACTd,OAAO,wBACPZ,eAAe,cCmCpB+C,MAvEf,WAAyB,IAAD,EACc3D,wBAASC,GADvB,mBACf2D,EADe,KACHC,EADG,OAEc7D,wBAASC,GAFvB,mBAEf6D,EAFe,KAEHC,EAFG,OAGQ/D,oBAAS,GAHjB,mBAGf6C,EAHe,KAGNC,EAHM,KAKtBpC,qBAAU,WACJkD,IAGJd,GAAW,GACXC,MAAM,eAAeC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAClCF,MAAK,SAAAlC,GACJ+C,EAAc/C,EAAI,YACdA,EAAI,QACNiD,EAAcjD,EAAI,OAAWyB,KAAI,SAAAyB,GAC/B,IAAIC,EAASD,EAAC,WACVE,EAAMD,EAAM,IAAQE,MAAM,KAC9B,MAAO,CACL,MAASD,EAAI,GACb,OAAUA,EAAI,GACd,OAAUD,EAAM,MAChB,QAAWA,EAAM,SACjB,KAAQA,EAAM,WACd,KAAQA,EAAM,eAKnBd,SAAQ,WACTL,GAAW,SAEd,CAACc,IAEJ,IAAIR,EAAYC,OAAOC,WAAW,uBAAuBC,QACnDjB,EAAU,CACd,CAAEE,QAAS,OAAQC,MAAO,SAAUX,MAAOsB,EAAY,IAAM,KAC7D,CAAEZ,QAAS,QAASC,MAAO,QAASX,MAAOsB,EAAY,IAAM,KAC7D,CAAEZ,QAAS,SAAUC,MAAO,SAAUX,MAAOsB,EAAY,IAAM,KAC/D,CAAEZ,QAAS,SAAUC,MAAO,SAAUX,MAAOsB,EAAY,IAAM,MAI/D,OACE,eAAC,IAAM7B,SAAP,WACSqC,GACP,sBAAKjC,UAAU,SAAf,UACE,cAACF,EAAA,EAAD,CAAYC,QAAQ,KAAKE,cAAY,EAArC,SAAuCgC,EAAU,aACjD,sCAASA,EAAU,YACnB,uCAAUA,EAAU,YACpB,0CAAaA,EAAU,mBAGzBE,IAAejB,GACf,cAACpB,EAAA,EAAD,CAAYC,QAAQ,KAApB,gCAEGmB,GACG,qBAAKW,MAAO,CAAEC,UAAW,QAAzB,SACI,cAACC,EAAA,EAAD,OAGNb,GACE,cAAC,EAAD,CACI/B,KAAMgD,EACNxB,QAASA,EACT1B,eAAe,c,qDCPlBwD,mBApDf,SAAoBrE,GAClB,IAAMsE,EAAW,SAACC,GAChBvE,EAAMwE,eACNxE,EAAMyE,QAAQC,KAAKH,IAErB,OACE,eAAC,IAAM/C,SAAP,WACE,eAACmD,EAAA,EAAD,CACE/C,UAAW,gBACXD,QAAQ,YACRiD,OAAO,OACPC,KAAM7E,EAAM6E,KACZC,QAAS,CAAEC,MAAO,UALpB,UAOE,cAACC,EAAA,EAAD,IACQ,eAACC,EAAA,EAAD,WACJ,cAACC,EAAA,EAAD,CAAUC,QAAM,EAACC,QAAS,kBAAMd,EAAS,MAAzC,SACI,cAACe,EAAA,EAAD,CAAcC,QAAS,WAE3B,cAACJ,EAAA,EAAD,CAAUC,QAAM,EAACC,QAAS,kBAAMd,EAAS,YAAzC,SACI,cAACe,EAAA,EAAD,CAAcC,QAAS,oBAE3B,cAACJ,EAAA,EAAD,CAAUC,QAAM,EAACC,QAAS,kBAAMd,EAAS,iBAAzC,SACI,cAACe,EAAA,EAAD,CAAcC,QAAS,wBAInC,eAACX,EAAA,EAAD,CACI/C,UAAW,iBACXD,QAAQ,aACRiD,OAAO,OACPC,MAAM,EACNC,QAAS,CAAEC,MAAO,UALtB,UAOI,cAACC,EAAA,EAAD,IACQ,eAACC,EAAA,EAAD,WACJ,cAACC,EAAA,EAAD,CAAUC,QAAM,EAACC,QAAS,kBAAOd,EAAS,MAA1C,SACI,cAACe,EAAA,EAAD,CAAcC,QAAS,WAE3B,cAACJ,EAAA,EAAD,CAAUC,QAAM,EAACC,QAAS,kBAAMd,EAAS,YAAzC,SACI,cAACe,EAAA,EAAD,CAAcC,QAAS,oBAE3B,cAACJ,EAAA,EAAD,CAAUC,QAAM,EAACC,QAAS,kBAAMd,EAAS,iBAAzC,SACI,cAACe,EAAA,EAAD,CAAcC,QAAS,8B,2DCaxBC,MAhDf,SAAavF,GAAQ,IAAD,EACMwF,IAAMvF,UAAS,GADrB,mBACX4E,EADW,KACLY,EADK,KAElB,OACE,cAAC,IAAD,UACE,sBAAK7D,UAAU,MAAf,UACE,cAAC8D,EAAA,EAAD,CACEC,SAAS,QACT/D,UAAWgE,YAAK,SAAUf,GAAQ,eAFpC,SAIE,eAACG,EAAA,EAAD,WACE,cAACa,EAAA,EAAD,CACEC,MAAM,UACNC,aAAW,cACXX,QAAS,kBAAMK,GAASZ,IACxBmB,KAAK,QACLpE,UAAWgE,YAAK,qBALlB,SAOE,cAAC,IAAD,MAEF,cAAClE,EAAA,EAAD,CAAYC,QAAQ,KAAKsE,QAAM,EAA/B,8BAKJ,cAAC,EAAD,CAAYzB,aAAc,kBAAMiB,GAASZ,IAAOA,KAAMA,IACtD,cAACG,EAAA,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkB,KAAK,eAAZ,SACE,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,QAGJ,cAAC,IAAD,CAAOD,KAAK,UAAZ,SACE,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,QAGJ,cAAC,IAAD,CAAOD,KAAK,IAAZ,SACE,cAACC,EAAA,EAAD,UACE,cAACzE,EAAA,EAAD,CAAYE,UAAU,SAASD,QAAQ,KAAvC,6CC7CCyE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBrD,MAAK,YAAkD,IAA/CsD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.60c79bde.chunk.js","sourcesContent":["import React, { useState, useEffect, } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport _ from 'lodash';\r\nimport { AutoSizer, Column, SortDirection, Table } from 'react-virtualized';\r\nimport 'react-virtualized/styles.css';\r\n\r\nfunction VirtualizedSortableTable(props) {\r\n    const [sortedData, setSortedData] = useState(undefined);\r\n    const [orderBy, setOrderBy] = useState();\r\n    const [order, setOrder] = useState(SortDirection.DESC);\r\n\r\n    useEffect(() => {\r\n        if (props.defaultOrder) {\r\n            setOrder(props.defaultOrder);\r\n        }\r\n        if (props.defaultOrderBy) {\r\n            setOrderBy(props.defaultOrderBy);\r\n        }\r\n    }, [props.defaultOrderBy, props.defaultOrder])\r\n\r\n    useEffect(() => {\r\n        setSortedData(_.orderBy(props.data, [orderBy], order.toLocaleLowerCase()));\r\n    }, [props.data, orderBy, order])\r\n\r\n    const handleSort = ({ defaultSortDirection, event, sortBy, sortDirection }) => {\r\n        const isAsc = orderBy === sortBy && order === SortDirection.ASC;\r\n        let newDirection = isAsc ? SortDirection.DESC : SortDirection.ASC;\r\n        setOrder(newDirection);\r\n        setOrderBy(sortBy);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {props.header && <Typography variant='h4' className=\"header\" gutterBottom>{props.header}</Typography>}\r\n            <div>\r\n                {sortedData && sortedData.length > 0 &&\r\n                    <AutoSizer>\r\n                        {({ width }) => (\r\n                            <Table\r\n                                height={600}\r\n                                width={width}\r\n                                rowHeight={40}\r\n                                headerHeight={40}\r\n                                sortBy={orderBy}\r\n                                sort={handleSort}\r\n                                rowCount={sortedData.length}\r\n                                rowGetter={({ index }) => sortedData[index]}\r\n                            >\r\n                                {props.columns.map(({ dataKey, label, width }) => {\r\n                                    return (\r\n                                        <Column\r\n                                            width={width ? width : 200}\r\n                                            key={dataKey}\r\n                                            dataKey={dataKey}\r\n                                            label={label}\r\n                                        />\r\n                                    );\r\n                                })}\r\n                            </Table>\r\n                        )}\r\n                    </AutoSizer>\r\n                }\r\n            </div>\r\n        </React.Fragment>\r\n\r\n    );\r\n}\r\nexport default VirtualizedSortableTable;\r\n","import React, { useState, useEffect, } from 'react';\r\nimport VirtualizedSortableTable from './VirtualizedSortableTable';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nfunction Leaderboard() {\r\n    const [leaderboardRecords, setLeaderboardRecords] = useState(undefined);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (leaderboardRecords) {\r\n            return\r\n        }\r\n        setLoading(true);\r\n        fetch('/api/leaderboard/get').then(res => res.json())\r\n            .then(data => {\r\n                setLeaderboardRecords(data);\r\n            }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n    }, [leaderboardRecords]);\r\n\r\n    let isDesktop = window.matchMedia(\"(min-width: 1281px)\").matches;\r\n    const columns = [\r\n        { dataKey: 'name', label: 'Player', width: isDesktop ? 400 : 200 },\r\n        { dataKey: 'kills', label: 'Kills', width: isDesktop ? 300 : 100 },\r\n        { dataKey: 'deaths', label: 'Deaths', width: isDesktop ? 300 : 100 },\r\n        { dataKey: 'points', label: 'Points', width: isDesktop ? 300 : 100 },\r\n    ]\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {loading &&\r\n                <div style={{ marginTop: '24px' }}>\r\n                    <CircularProgress />\r\n                </div>\r\n            }\r\n            {!loading &&\r\n                <VirtualizedSortableTable\r\n                    data={leaderboardRecords}\r\n                    columns={columns}\r\n                    header=\"Preseason Leaderboard\"\r\n                    defaultOrderBy=\"kills\"\r\n                />\r\n            }\r\n        </React.Fragment>\r\n\r\n    );\r\n}\r\nexport default Leaderboard;\r\n","import React, { useState, useEffect, } from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VirtualizedSortableTable from './VirtualizedSortableTable';\r\n\r\nfunction ServerStatus() {\r\n  const [serverInfo, setServerInfo] = useState(undefined);\r\n  const [playerList, setPlayerList] = useState(undefined);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (serverInfo) {\r\n      return\r\n    }\r\n    setLoading(true);\r\n    fetch('/api/server').then(res => res.json())\r\n      .then(data => {\r\n        setServerInfo(data[\"ServerInfo\"]);\r\n        if (data[\"Scores\"]) {\r\n          setPlayerList(data[\"Scores\"].map(p => {\r\n            let player = p[\"PlayerInfo\"];\r\n            let kda = player[\"KDA\"].split(\"/\");\r\n            return {\r\n              'kills': kda[0],\r\n              'deaths': kda[1],\r\n              'points': player[\"Score\"],\r\n              'steamId': player[\"UniqueId\"],\r\n              'name': player[\"PlayerName\"],\r\n              'team': player[\"TeamId\"]\r\n            }\r\n          }));\r\n        }\r\n\r\n      }).finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [serverInfo]);\r\n\r\n  let isDesktop = window.matchMedia(\"(min-width: 1281px)\").matches;\r\n  const columns = [\r\n    { dataKey: 'name', label: 'Player', width: isDesktop ? 400 : 200 },\r\n    { dataKey: 'kills', label: 'Kills', width: isDesktop ? 300 : 100 },\r\n    { dataKey: 'deaths', label: 'Deaths', width: isDesktop ? 300 : 100 },\r\n    { dataKey: 'points', label: 'Points', width: isDesktop ? 300 : 100 },\r\n  ]\r\n\r\n\r\n    return (\r\n      <React.Fragment>\r\n              {serverInfo &&\r\n        <div className=\"header\">\r\n          <Typography variant='h5' gutterBottom>{serverInfo[\"ServerName\"]}</Typography>\r\n          <p>Map: {serverInfo[\"MapLabel\"]}</p>\r\n          <p>Mode: {serverInfo[\"GameMode\"]}</p>\r\n          <p>Players: {serverInfo[\"PlayerCount\"]}</p>\r\n        </div>\r\n      }\r\n      {!playerList && !loading &&\r\n        <Typography variant='h5'>No current players</Typography>\r\n      }\r\n          {loading &&\r\n              <div style={{ marginTop: '24px' }}>\r\n                  <CircularProgress />\r\n              </div>\r\n          }\r\n          {!loading &&\r\n              <VirtualizedSortableTable\r\n                  data={playerList}\r\n                  columns={columns}\r\n                  defaultOrderBy=\"kills\"\r\n              />\r\n          }\r\n      </React.Fragment>\r\n\r\n  );\r\n}\r\nexport default ServerStatus;\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport {\r\n  withRouter\r\n} from \"react-router-dom\";\r\n\r\nfunction Navigation(props) {\r\n  const navigate = (page) => {\r\n    props.toggleDrawer()\r\n    props.history.push(page)\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <Drawer\r\n        className={\"drawer mobile\"}\r\n        variant=\"temporary\"\r\n        anchor=\"left\"\r\n        open={props.open}\r\n        classes={{ paper: \"drawer\" }}\r\n      >\r\n        <Toolbar />\r\n                <List>\r\n            <ListItem button onClick={() => navigate(\"/\")}>\r\n                <ListItemText primary={\"Home\"}  />\r\n            </ListItem>\r\n            <ListItem button onClick={() => navigate(\"/server\")}>\r\n                <ListItemText primary={\"Server Status\"}  />\r\n            </ListItem>\r\n            <ListItem button onClick={() => navigate(\"/leaderboard\")}>\r\n                <ListItemText primary={\"Leaderboard\"} />\r\n            </ListItem>\r\n          </List> \r\n      </Drawer>\r\n    <Drawer\r\n        className={\"drawer desktop\"}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={true}\r\n        classes={{ paper: \"drawer\" }}\r\n      >\r\n        <Toolbar />\r\n                <List>\r\n            <ListItem button onClick={() =>  navigate(\"/\")}>\r\n                <ListItemText primary={\"Home\"}  />\r\n            </ListItem>\r\n            <ListItem button onClick={() => navigate(\"/server\")}>\r\n                <ListItemText primary={\"Server Status\"}  />\r\n            </ListItem>\r\n            <ListItem button onClick={() => navigate(\"/leaderboard\")}>\r\n                <ListItemText primary={\"Leaderboard\"} />\r\n            </ListItem>\r\n          </List> \r\n      </Drawer>\r\n      </React.Fragment>\r\n    \r\n  );\r\n}\r\n\r\nexport default withRouter(Navigation);\r\n","import React from 'react';\nimport './App.css';\nimport Leaderboard from './components/Leaderboard';\nimport ServerStatus from './components/ServerStatus';\nimport Navigation from './components/Navigation';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport clsx from 'clsx';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nfunction App(props) {\n  const [open, setOpen] = React.useState(false);\n  return (\n    <Router>\n      <div className=\"App\">\n        <AppBar\n          position=\"fixed\"\n          className={clsx(\"appBar\", open && \"appBarshift\")}\n        >\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={() => setOpen(!open)}\n              edge=\"start\"\n              className={clsx(\"menuButton mobile\")}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" noWrap>\n              VR Together\n          </Typography>\n          </Toolbar>\n        </AppBar>\n        <Navigation toggleDrawer={() => setOpen(!open)} open={open} />\n        <Toolbar />\n        <Switch>\n          <Route path=\"/leaderboard\">\n            <Container>\n              <Leaderboard />\n            </Container>\n          </Route>\n          <Route path=\"/server\">\n            <Container>\n              <ServerStatus />\n            </Container>\n          </Route>\n          <Route path=\"/\">\n            <Container>\n              <Typography className=\"header\" variant='h4'>VR-Together Pavlov</Typography>\n            </Container>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}