{"version":3,"sources":["components/Leaderboard.js","components/ServerStatus.js","components/Navigation.js","components/DraggableList.js","components/MapHelper.js","App.js","reportWebVitals.js","index.js"],"names":["Leaderboard","useState","undefined","leaderboardRecords","setLeaderboardRecords","loading","setLoading","useEffect","fetch","then","res","json","data","finally","isDesktop","window","matchMedia","matches","columns","dataKey","label","width","style","height","Typography","variant","className","gutterBottom","CircularProgress","color","minHeight","defaultOrder","defaultOrderBy","ignoreSearchColumns","inputClassName","ServerStatus","serverInfo","setServerInfo","playerList","setPlayerList","map","p","player","kda","split","kills","deaths","points","steamId","name","team","length","toString","maxHeight","showSearch","withRouter","props","navigate","page","toggleDrawer","history","push","getLinks","List","ListItem","button","onClick","ListItemText","primary","Fragment","Drawer","anchor","open","classes","paper","Toolbar","DraggableList","deleteItem","item","newItems","state","items","filter","i","id","setState","updateSortedItems","onDragEnd","bind","result","destination","list","startIndex","endIndex","Array","from","splice","removed","reorder","this","source","index","droppableId","provided","snapshot","droppableProps","ref","innerRef","isDraggingOver","backgroundColor","padding","margin","draggableId","draggableProps","dragHandleProps","isDragging","draggableStyle","userSelect","position","grid","gameMode","IconButton","placeholder","Component","MapHelper","enteredText","setEnteredText","setResult","sortedItems","setSortedItems","Grid","container","spacing","xs","Button","method","mode","headers","body","JSON","stringify","element","document","createElement","setAttribute","encodeURIComponent","join","display","appendChild","click","removeChild","TextField","onChange","e","target","value","multiline","rows","App","React","setOpen","AppBar","clsx","aria-label","edge","noWrap","path","Container","marginBottom","src","allowtransparency","frameborder","sandbox","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.52e81e7c.chunk.js","sourcesContent":["import React, { useState, useEffect, } from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Typography } from '@material-ui/core';\r\nimport Table from 'react-all-in-one-table';\r\n\r\nfunction Leaderboard() {\r\n    const [leaderboardRecords, setLeaderboardRecords] = useState(undefined);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (leaderboardRecords) {\r\n            return\r\n        }\r\n        setLoading(true);\r\n        fetch('/api/leaderboard/get').then(res => res.json())\r\n            .then(data => {\r\n                setLeaderboardRecords(data);\r\n            }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n    }, [leaderboardRecords]);\r\n\r\n    let isDesktop = window.matchMedia(\"(min-width: 1281px)\").matches;\r\n    const columns = [\r\n        { dataKey: 'name', label: 'Player', width: isDesktop ? 400 : 300 },\r\n        { dataKey: 'kills', label: isDesktop ? 'Kills' : \"K\", width: isDesktop ? 300 : 75 },\r\n        { dataKey: 'deaths', label: isDesktop ? 'Deaths' : \"D\", width: isDesktop ? 300 : 75 },\r\n        { dataKey: 'points', label: isDesktop ? 'Points' : \"P\", width: isDesktop ? 300 : 75 },\r\n    ]\r\n\r\n    return (\r\n        <div style={{ height: '600px'}}>\r\n            <Typography variant='h4' className=\"header\" gutterBottom>Pre-season Leaderboard (Beta)</Typography>\r\n            {loading &&\r\n                <CircularProgress color='secondary' />\r\n            }\r\n            {!loading &&\r\n            <div style={{ minHeight: '40vh', height: '60vh' }}>\r\n                <Table\r\n                    data={leaderboardRecords}\r\n                    columns={columns}\r\n                    defaultOrder=\"desc\"\r\n                    defaultOrderBy=\"kills\"\r\n                    ignoreSearchColumns={[\"steamId\"]}\r\n                    inputClassName={\"search-input\"}\r\n                />\r\n                </div>\r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Leaderboard;\r\n","import React, { useState, useEffect, } from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from 'react-all-in-one-table';\r\n\r\nfunction ServerStatus() {\r\n  const [serverInfo, setServerInfo] = useState(undefined);\r\n  const [playerList, setPlayerList] = useState(undefined);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (serverInfo) {\r\n      return\r\n    }\r\n    setLoading(true);\r\n    fetch('/api/server').then(res => res.json())\r\n      .then(data => {\r\n        setServerInfo(data);\r\n        if (data[\"Scores\"]) {\r\n          setPlayerList(data[\"Scores\"].map(p => {\r\n            let player = p[\"PlayerInfo\"];\r\n            let kda = player[\"KDA\"].split(\"/\");\r\n            return {\r\n              kills: kda[0],\r\n              deaths: kda[1],\r\n              points: player[\"Score\"],\r\n              steamId: player[\"UniqueId\"],\r\n              name: player[\"PlayerName\"],\r\n              team: player[\"TeamId\"]\r\n            }\r\n          }));\r\n        }\r\n\r\n      }).finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [serverInfo]);\r\n\r\n  let isDesktop = window.matchMedia(\"(min-width: 1281px)\").matches;\r\n  const columns = [\r\n    { dataKey: 'name', label: 'Player', width: isDesktop ? 400 : 200 },\r\n    { dataKey: 'kills', label: isDesktop ? 'Kills' : \"K\", width: isDesktop ? 300 : 100 },\r\n    { dataKey: 'deaths', label: 'Deaths', width: isDesktop ? 300 : 100 },\r\n    { dataKey: 'points', label: 'Points', width: isDesktop ? 300 : 100 },\r\n  ]\r\n\r\n\r\n  return (\r\n    <div>\r\n      {serverInfo &&\r\n        <div className=\"header\">\r\n          <Typography variant='h6' gutterBottom>{serverInfo[\"ServerName\"]}</Typography>\r\n          <p>Map: {serverInfo[\"MapLabel\"]}</p>\r\n          <p>Mode: {serverInfo[\"GameMode\"]}</p>\r\n          <p>Players: {serverInfo[\"PlayerCount\"]}</p>\r\n        </div>\r\n      }\r\n      {loading &&\r\n        <CircularProgress color='secondary' />\r\n      }\r\n      {!loading && playerList && playerList.length > 0 &&\r\n        <div style={{ height:  (40+(40 * playerList.length)).toString()+\"px\", maxHeight: '520px'}}>\r\n          <Table\r\n            showSearch={false}\r\n            data={playerList}\r\n            columns={columns}\r\n            defaultOrderBy=\"kills\"\r\n          />\r\n        </div>\r\n      }\r\n    </div>\r\n\r\n  );\r\n}\r\nexport default ServerStatus;\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport {\r\n  withRouter\r\n} from \"react-router-dom\";\r\n\r\nfunction Navigation(props) {\r\n  const navigate = (page) => {\r\n    props.toggleDrawer()\r\n    props.history.push(page)\r\n  }\r\n  const getLinks = () => (<List>\r\n    <ListItem button onClick={() => navigate(\"/\")}>\r\n      <ListItemText primary={\"Home\"} />\r\n    </ListItem>\r\n    <ListItem button onClick={() => navigate(\"/server\")}>\r\n      <ListItemText primary={\"Server Status\"} />\r\n    </ListItem>\r\n    <ListItem button onClick={() => navigate(\"/leaderboard\")}>\r\n      <ListItemText primary={\"Leaderboard\"} />\r\n    </ListItem>\r\n    <ListItem button onClick={() => navigate(\"/maps\")}>\r\n      <ListItemText primary={\"MapRotation Editor\"} />\r\n    </ListItem>\r\n  </List>)\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Drawer\r\n        className={\"drawer mobile\"}\r\n        variant=\"temporary\"\r\n        anchor=\"left\"\r\n        open={props.open}\r\n        classes={{ paper: \"drawer\" }}\r\n      >\r\n        <Toolbar />\r\n        {getLinks()}\r\n      </Drawer>\r\n      <Drawer\r\n        className={\"drawer desktop\"}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={true}\r\n        classes={{ paper: \"drawer\" }}\r\n      >\r\n        <Toolbar />\r\n        <List>\r\n          {getLinks()}\r\n        </List>\r\n      </Drawer>\r\n    </React.Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default withRouter(Navigation);\r\n","import React, { Component } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { IconButton } from '@material-ui/core';\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nconst grid = 8;\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n  userSelect: \"none\",\r\n  position: 'relative',\r\n  padding: grid * 2,\r\n  margin: `0 0 ${grid}px 0`,\r\n\r\n  backgroundColor: \"#2f3136\",\r\n  ...draggableStyle\r\n});\r\n\r\nconst getListStyle = isDraggingOver => ({\r\n  backgroundColor: \"#202225\",\r\n  padding: grid,\r\n  margin: '0 auto'\r\n});\r\n\r\nexport class DraggableList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: props.items\r\n    };\r\n    this.props.updateSortedItems(props.items);\r\n    this.onDragEnd = this.onDragEnd.bind(this);\r\n  }\r\n\r\n  onDragEnd(result) {\r\n    // dropped outside the list\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const items = reorder(\r\n      this.state.items,\r\n      result.source.index,\r\n      result.destination.index\r\n    );\r\n\r\n    this.setState({\r\n      items\r\n    });\r\n    this.props.updateSortedItems(items);\r\n  }\r\n\r\n  deleteItem = (item) => {\r\n    let newItems = this.state.items.filter(i => i.id !== item.id);\r\n    this.setState({\r\n      items: newItems\r\n    });\r\n    this.props.updateSortedItems(newItems);\r\n  }\r\n\r\n\r\n  // Normally you would want to split things out into separate components.\r\n  // But in this example everything is just done in one place for simplicity\r\n  render() {\r\n    return (\r\n      <DragDropContext onDragEnd={this.onDragEnd}>\r\n        <Droppable droppableId=\"droppable\">\r\n          {(provided, snapshot) => (\r\n            <div\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n              style={getListStyle(snapshot.isDraggingOver)}\r\n            >\r\n              {this.state.items.map((item, index) => (\r\n                <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                  {(provided, snapshot) => (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                      style={getItemStyle(\r\n                        snapshot.isDragging,\r\n                        provided.draggableProps.style\r\n                      )}\r\n                    >\r\n                      <span>{item.name} - {item.id} - {item.gameMode}</span>\r\n                      <IconButton onClick={() => this.deleteItem(item)} className=\"delete-icon\"><DeleteIcon  /></IconButton>\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useEffect, } from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Typography } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { DraggableList } from './DraggableList';\r\n\r\nfunction MapHelper() {\r\n    const [enteredText, setEnteredText] = useState(\"\");\r\n    const [result, setResult] = useState([])\r\n    const [sortedItems, setSortedItems] = useState([])\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const attemptSubmit = () => {\r\n        setLoading(true);\r\n        fetch(`/api/map/fromRotation?rotation=${enteredText}`, ).then(res => res.json())\r\n            .then(data => {\r\n                setResult(data)\r\n            }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n    }\r\n\r\n    const download = () => {\r\n        fetch(`/api/map/rotationFromData`, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n              },\r\n            body: JSON.stringify(sortedItems)\r\n        }).then(res => res.json())\r\n        .then(data => {\r\n            var element = document.createElement('a');\r\n            element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(data.join(\"\\n\")));\r\n            element.setAttribute('download', \"Test.txt\");\r\n            element.style.display = 'none';\r\n            document.body.appendChild(element);\r\n            element.click();\r\n            document.body.removeChild(element);\r\n        }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Typography variant='h4' className=\"header\" gutterBottom>MapRotation Editor</Typography>\r\n            <Grid container spacing={3}>\r\n                {result && result.length > 0 && !loading &&\r\n                    <React.Fragment>\r\n                        <Grid item xs={12}>\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={() => setResult([])}>Return</Button>\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={() => download()}>Save</Button>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <DraggableList items={result} updateSortedItems={(items) => setSortedItems(items)} />\r\n                        </Grid>\r\n                    </React.Fragment>\r\n                }\r\n                {loading &&\r\n                    <Grid item xs={12}>\r\n                        <CircularProgress color='secondary' />\r\n                    </Grid>\r\n                }\r\n                {!loading && result.length === 0 &&\r\n                    <React.Fragment>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                label=\"MapRotations\"\r\n                                onChange={(e) => setEnteredText(e.target.value)}\r\n                                multiline\r\n                                rows={12}\r\n                                className=\"rotation-input\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={() => attemptSubmit()}>Submit</Button>\r\n                        </Grid>\r\n                    </React.Fragment>\r\n                }\r\n\r\n            </Grid>\r\n        </React.Fragment>\r\n\r\n    );\r\n}\r\nexport default MapHelper;\r\n","import React from 'react';\nimport './App.css';\nimport Leaderboard from './components/Leaderboard';\nimport ServerStatus from './components/ServerStatus';\nimport Navigation from './components/Navigation';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport clsx from 'clsx';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport MapHelper from './components/MapHelper';\n\nfunction App(props) {\n  const [open, setOpen] = React.useState(false);\n  return (\n    <Router>\n      <div className=\"App\">\n        <AppBar\n          position=\"fixed\"\n          className={clsx(\"appBar\", open && \"appBarshift\")}\n        >\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={() => setOpen(!open)}\n              edge=\"start\"\n              className={clsx(\"menuButton mobile\")}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" noWrap>\n              VR Together\n          </Typography>\n          </Toolbar>\n        </AppBar>\n        <Navigation toggleDrawer={() => setOpen(!open)} open={open} />\n        <Toolbar />\n        <Switch>\n          <Route path=\"/leaderboard\">\n            <Container>\n              <Leaderboard />\n            </Container>\n          </Route>\n          <Route path=\"/server\">\n            <Container>\n              <ServerStatus />\n            </Container>\n          </Route>\n          <Route path=\"/maps\">\n            <Container>\n              <MapHelper />\n            </Container>\n          </Route>\n          <Route path=\"/\">\n            <Container>\n              <Typography style={{ marginBottom: '36px' }} className=\"header\" variant='h4'>VR-Together</Typography>\n              <iframe src=\"https://discord.com/widget?id=827686879188877334&theme=dark\" width=\"350\" height=\"500\" allowtransparency=\"true\" frameborder=\"0\" sandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\"></iframe>\n            </Container>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}