{"version":3,"sources":["components/VirtualizedTable.js","components/Leaderboard.js","components/ServerStatus.js","components/Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["MuiVirtualizedTable","getRowClassName","index","props","classes","onRowClick","clsx","tableRow","flexContainer","tableRowHover","cellRenderer","cellData","columnIndex","columns","rowHeight","TableCell","component","className","tableCell","noClick","variant","style","height","align","numeric","headerRenderer","label","headerClick","headerHeight","onClick","dataKey","this","tableProps","width","gridStyle","direction","table","rowClassName","map","other","headerProps","React","PureComponent","defaultProps","VirtualizedTable","withStyles","theme","display","alignItems","boxSizing","cursor","backgroundColor","palette","grey","flex","Leaderboard","useState","undefined","leaderboardRecords","setLeaderboardRecords","sortedData","setSortedData","orderBy","setOrderBy","order","setOrder","loading","setLoading","useEffect","fetch","then","res","json","data","_","isDesktop","window","matchMedia","matches","Container","Typography","gutterBottom","Paper","length","rowCount","rowGetter","property","CircularProgress","ServerStatus","serverInfo","setServerInfo","playerList","setPlayerList","p","player","kda","split","finally","marginTop","withRouter","navigate","page","toggleDrawer","history","push","Fragment","Drawer","anchor","open","paper","Toolbar","List","ListItem","button","ListItemText","primary","App","setOpen","AppBar","position","IconButton","color","aria-label","edge","noWrap","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4cf395d6.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport { AutoSizer, Column, Table } from 'react-virtualized';\r\n\r\nconst styles = (theme) => ({\r\n  flexContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    boxSizing: 'border-box',\r\n  },\r\n\r\n  tableRow: {\r\n    cursor: 'pointer',\r\n  },\r\n  tableRowHover: {\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.grey[200],\r\n    },\r\n  },\r\n  tableCell: {\r\n    flex: 1,\r\n  },\r\n  noClick: {\r\n    cursor: 'initial',\r\n  },\r\n});\r\n\r\nclass MuiVirtualizedTable extends React.PureComponent {\r\n  static defaultProps = {\r\n    headerHeight: 48,\r\n    rowHeight: 48,\r\n  };\r\n\r\n  getRowClassName = ({ index }) => {\r\n    const { classes, onRowClick } = this.props;\r\n\r\n    return clsx(classes.tableRow, classes.flexContainer, {\r\n      [classes.tableRowHover]: index !== -1 && onRowClick != null,\r\n    });\r\n  };\r\n\r\n  cellRenderer = ({ cellData, columnIndex }) => {\r\n    const { columns, classes, rowHeight, onRowClick } = this.props;\r\n    return (\r\n      <TableCell\r\n        component=\"div\"\r\n        className={clsx(classes.tableCell, classes.flexContainer, {\r\n          [classes.noClick]: onRowClick == null,\r\n        })}\r\n        variant=\"body\"\r\n        style={{ height: rowHeight }}\r\n        align={(columnIndex != null && columns[columnIndex].numeric) || false ? 'right' : 'left'}\r\n      >\r\n        {cellData}\r\n      </TableCell>\r\n    );\r\n  };\r\n\r\n  headerRenderer = ({ label, columnIndex }) => {\r\n    const { headerClick, headerHeight, columns, classes } = this.props;\r\n\r\n    return (\r\n      <TableCell\r\n        onClick={() => headerClick(columns[columnIndex].dataKey)}\r\n        component=\"div\"\r\n        className={clsx(classes.tableCell, classes.flexContainer, classes.noClick)}\r\n        variant=\"head\"\r\n        style={{ height: headerHeight }}\r\n        align={columns[columnIndex].numeric || false ? 'right' : 'left'}\r\n      >\r\n        <span>{label}</span>\r\n      </TableCell>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { classes, columns, rowHeight, headerClick, headerHeight, ...tableProps } = this.props;\r\n    return (\r\n      <AutoSizer>\r\n        {({ height, width }) => (\r\n          <Table\r\n            height={height}\r\n            width={width}\r\n            rowHeight={rowHeight}\r\n            gridStyle={{\r\n              direction: 'inherit',\r\n            }}\r\n            headerHeight={headerHeight}\r\n            className={classes.table}\r\n            {...tableProps}\r\n            rowClassName={this.getRowClassName}\r\n          >\r\n            {columns.map(({ dataKey, ...other }, index) => {\r\n              return (\r\n                <Column\r\n                  key={dataKey}\r\n                  headerRenderer={(headerProps) =>\r\n                    this.headerRenderer({\r\n                      ...headerProps,\r\n                      columnIndex: index,\r\n                    })\r\n                  }\r\n                  className={classes.flexContainer}\r\n                  cellRenderer={this.cellRenderer}\r\n                  dataKey={dataKey}\r\n                  {...other}\r\n                />\r\n              );\r\n            })}\r\n          </Table>\r\n        )}\r\n      </AutoSizer>\r\n    );\r\n  }\r\n}\r\n\r\nMuiVirtualizedTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  columns: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      dataKey: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      numeric: PropTypes.bool,\r\n    }),\r\n  ).isRequired,\r\n  headerHeight: PropTypes.number,\r\n  onRowClick: PropTypes.func,\r\n  rowHeight: PropTypes.number,\r\n};\r\n\r\nconst VirtualizedTable = withStyles(styles)(MuiVirtualizedTable);\r\n\r\nexport default VirtualizedTable;","import React, { useState, useEffect, } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport VirtualizedTable from './VirtualizedTable';\r\nimport _ from 'lodash';\r\n\r\nfunction Leaderboard() {\r\n    const [leaderboardRecords, setLeaderboardRecords] = useState(undefined);\r\n    const [sortedData, setSortedData] = useState(undefined);\r\n    const [orderBy, setOrderBy] = useState('kills');\r\n    const [order, setOrder] = useState('desc');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (leaderboardRecords) {\r\n            return\r\n        }\r\n        setLoading(true);\r\n        fetch('/api/leaderboard/get').then(res => res.json())\r\n            .then(data => {\r\n                setLeaderboardRecords(data);\r\n                setLoading(false);\r\n            });\r\n    }, [leaderboardRecords]);\r\n\r\n    useEffect(() => {\r\n        setSortedData(_.orderBy(leaderboardRecords, [orderBy], order));\r\n    }, [orderBy, order, leaderboardRecords])\r\n    let isDesktop = window.matchMedia(\"(min-width: 1281px)\").matches;\r\n    const columns = [\r\n        { dataKey: 'name', label: 'Player', width: isDesktop ? 400 : 200 },\r\n        { dataKey: 'kills', label: 'Kills', width: isDesktop ? 300 : 100 },\r\n        { dataKey: 'deaths', label: 'Deaths', width: isDesktop ? 300 : 100 },\r\n        { dataKey: 'points', label: 'Points', width: isDesktop ? 300 : 100 },\r\n    ]\r\n\r\n    const handleSort = (property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Typography variant='h4' className=\"header\" gutterBottom>Preseason Leaderboard</Typography>\r\n            <Paper style={{ height: 400, width: '100%' }}>\r\n                {sortedData && sortedData.length > 0 &&\r\n                    <VirtualizedTable\r\n                        rowCount={sortedData.length}\r\n                        rowGetter={({ index }) => sortedData[index]}\r\n                        columns={columns}\r\n                        headerClick={handleSort}\r\n                    />\r\n                }\r\n                {loading &&\r\n                    <CircularProgress />\r\n                }\r\n            </Paper>\r\n        </Container>\r\n    );\r\n}\r\nexport default Leaderboard;\r\n","import React, { useState, useEffect, } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport VirtualizedTable from './VirtualizedTable';\r\nimport _ from 'lodash';\r\n\r\nfunction ServerStatus() {\r\n  const [serverInfo, setServerInfo] = useState(undefined);\r\n  const [playerList, setPlayerList] = useState(undefined);\r\n  const [loading, setLoading] = useState(false);\r\n  const [sortedData, setSortedData] = useState(undefined);\r\n  const [orderBy, setOrderBy] = useState('kills');\r\n  const [order, setOrder] = useState('desc');\r\n\r\n  useEffect(() => {\r\n    if (serverInfo) {\r\n      return\r\n    }\r\n    setLoading(true);\r\n    fetch('/api/server').then(res => res.json())\r\n      .then(data => {\r\n        setServerInfo(data[\"ServerInfo\"]);\r\n        if (data[\"Scores\"]) {\r\n          setPlayerList(data[\"Scores\"].map(p => {\r\n            let player = p[\"PlayerInfo\"];\r\n            let kda = player[\"KDA\"].split(\"/\");\r\n            return {\r\n              'kills': kda[0],\r\n              'deaths': kda[1],\r\n              'points': player[\"Score\"],\r\n              'steamId': player[\"UniqueId\"],\r\n              'name': player[\"PlayerName\"],\r\n              'team': player[\"TeamId\"]\r\n            }\r\n          }));\r\n        }\r\n\r\n      }).finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [serverInfo]);\r\n\r\n  useEffect(() => {\r\n    setSortedData(_.orderBy(playerList, [orderBy], order));\r\n  }, [orderBy, order, playerList])\r\n  \r\n  let isDesktop = window.matchMedia(\"(min-width: 1281px)\").matches;\r\n  const columns = [\r\n    { dataKey: 'name', label: 'Player', width: isDesktop ? 400 : 200 },\r\n    { dataKey: 'kills', label: 'Kills', width: isDesktop ? 300 : 100 },\r\n    { dataKey: 'deaths', label: 'Deaths', width: isDesktop ? 300 : 100 },\r\n    { dataKey: 'points', label: 'Points', width: isDesktop ? 300 : 100 },\r\n  ]\r\n  const handleSort = (property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {serverInfo &&\r\n        <div className=\"header\">\r\n          <Typography variant='h5' gutterBottom>{serverInfo[\"ServerName\"]}</Typography>\r\n          <p>Map: {serverInfo[\"MapLabel\"]}</p>\r\n          <p>Mode: {serverInfo[\"GameMode\"]}</p>\r\n          <p>Players: {serverInfo[\"PlayerCount\"]}</p>\r\n        </div>\r\n      }\r\n      {!playerList && !loading &&\r\n        <Typography variant='h5'>No current players</Typography>\r\n      }\r\n      {sortedData && sortedData.length > 0 &&\r\n        <Paper style={{ height: 400, width: '100%' }}>\r\n\r\n          <VirtualizedTable\r\n            rowCount={sortedData.length}\r\n            rowGetter={({ index }) => sortedData[index]}\r\n            columns={columns}\r\n            headerClick={handleSort}\r\n          />\r\n        </Paper>\r\n      }\r\n      {loading &&\r\n        <div style={{marginTop: '24px'}}>\r\n          <CircularProgress />\r\n        </div>\r\n      }\r\n    </Container>\r\n  );\r\n}\r\nexport default ServerStatus;\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport {\r\n  withRouter\r\n} from \"react-router-dom\";\r\n\r\nfunction Navigation(props) {\r\n  const navigate = (page) => {\r\n    props.toggleDrawer()\r\n    props.history.push(page)\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <Drawer\r\n        className={\"drawer mobile\"}\r\n        variant=\"temporary\"\r\n        anchor=\"left\"\r\n        open={props.open}\r\n        classes={{ paper: \"drawer\" }}\r\n      >\r\n        <Toolbar />\r\n                <List>\r\n            <ListItem button onClick={() => navigate(\"/\")}>\r\n                <ListItemText primary={\"Home\"}  />\r\n            </ListItem>\r\n            <ListItem button onClick={() => navigate(\"/server\")}>\r\n                <ListItemText primary={\"Server Status\"}  />\r\n            </ListItem>\r\n            <ListItem button onClick={() => navigate(\"/leaderboard\")}>\r\n                <ListItemText primary={\"Leaderboard\"} />\r\n            </ListItem>\r\n          </List> \r\n      </Drawer>\r\n    <Drawer\r\n        className={\"drawer desktop\"}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={true}\r\n        classes={{ paper: \"drawer\" }}\r\n      >\r\n        <Toolbar />\r\n                <List>\r\n            <ListItem button onClick={() =>  navigate(\"/\")}>\r\n                <ListItemText primary={\"Home\"}  />\r\n            </ListItem>\r\n            <ListItem button onClick={() => navigate(\"/server\")}>\r\n                <ListItemText primary={\"Server Status\"}  />\r\n            </ListItem>\r\n            <ListItem button onClick={() => navigate(\"/leaderboard\")}>\r\n                <ListItemText primary={\"Leaderboard\"} />\r\n            </ListItem>\r\n          </List> \r\n      </Drawer>\r\n      </React.Fragment>\r\n    \r\n  );\r\n}\r\n\r\nexport default withRouter(Navigation);\r\n","import React from 'react';\nimport './App.css';\nimport Leaderboard from './components/Leaderboard';\nimport ServerStatus from './components/ServerStatus';\nimport Navigation from './components/Navigation';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport clsx from 'clsx';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nfunction App(props) {\n  const [open, setOpen] = React.useState(false);\n  return (\n    <Router>\n      <div className=\"App\">\n        <AppBar\n        position=\"fixed\"\n        className={clsx(\"appBar\", open && \"appBarshift\")}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={() => setOpen(!open)}\n            edge=\"start\"\n            className={clsx(\"menuButton mobile\")}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            VR Together\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Navigation toggleDrawer={() => setOpen(!open)}open={open}/>\n      <Toolbar />\n        <Switch>\n          <Route path=\"/leaderboard\">\n            <Leaderboard />\n          </Route>\n          <Route path=\"/server\">\n            <ServerStatus />\n          </Route>\n          <Route path=\"/\">\n            <Container>\n              <Typography className=\"header\" variant='h4'>VR-Together Pavlov</Typography>\n            </Container>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}