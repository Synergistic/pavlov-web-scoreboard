{"version":3,"sources":["components/Leaderboard.js","components/ServerStatus.js","components/Navigation.js","App.js","reportWebVitals.js","index.js","../../src/index.tsx"],"names":["Leaderboard","useState","undefined","leaderboardRecords","setLeaderboardRecords","loading","setLoading","useEffect","fetch","then","res","json","data","finally","isDesktop","window","matchMedia","matches","columns","dataKey","label","width","style","height","Typography","variant","className","gutterBottom","CircularProgress","color","minHeight","defaultOrder","defaultOrderBy","ignoreSearchColumns","inputClassName","onRowClick","rowData","console","log","name","ServerStatus","serverInfo","setServerInfo","playerList","setPlayerList","map","p","player","kda","split","kills","deaths","points","steamId","team","length","toString","maxHeight","showSearch","withRouter","props","navigate","page","toggleDrawer","history","push","Fragment","Drawer","anchor","open","classes","paper","Toolbar","List","ListItem","button","onClick","ListItemText","primary","App","React","setOpen","AppBar","position","clsx","IconButton","aria-label","edge","noWrap","path","Container","marginBottom","src","allowtransparency","frameborder","sandbox","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","defaultSearchTerm","filteredData","setFilteredData","searchTerm","setSearchTerm","sortedData","setSortedData","orderBy","setOrderBy","order","setOrder","filtered","_.filter","d","match","keys","Object","i","indexOf","toLowerCase","_.orderBy","handleSort","sortBy","React.createElement","placeholder","value","onChange","e","target","type","AutoSizer","Table","rowHeight","headerHeight","sort","rowCount","rowGetter","index","Column","key"],"mappings":"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","file":"static/js/main.4eecde03.chunk.js","sourcesContent":["import React, { useState, useEffect, } from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Typography } from '@material-ui/core';\r\nimport Table from 'react-all-in-one-table';\r\n\r\nfunction Leaderboard() {\r\n    const [leaderboardRecords, setLeaderboardRecords] = useState(undefined);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (leaderboardRecords) {\r\n            return\r\n        }\r\n        setLoading(true);\r\n        fetch('/api/leaderboard/get').then(res => res.json())\r\n            .then(data => {\r\n                setLeaderboardRecords(data);\r\n            }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n    }, [leaderboardRecords]);\r\n\r\n    let isDesktop = window.matchMedia(\"(min-width: 1281px)\").matches;\r\n    const columns = [\r\n        { dataKey: 'name', label: 'Player', width: isDesktop ? 400 : 300 },\r\n        { dataKey: 'kills', label: isDesktop ? 'Kills' : \"K\", width: isDesktop ? 300 : 75 },\r\n        { dataKey: 'deaths', label: isDesktop ? 'Deaths' : \"D\", width: isDesktop ? 300 : 75 },\r\n        { dataKey: 'points', label: isDesktop ? 'Points' : \"P\", width: isDesktop ? 300 : 75 },\r\n    ]\r\n\r\n    return (\r\n        <div style={{ height: '600px'}}>\r\n            <Typography variant='h4' className=\"header\" gutterBottom>Preseason Leaderboard</Typography>\r\n            {loading &&\r\n                <CircularProgress color='secondary' />\r\n            }\r\n            {!loading &&\r\n            <div style={{ minHeight: '40vh', height: '60vh' }}>\r\n                <Table\r\n                    data={leaderboardRecords}\r\n                    columns={columns}\r\n                    defaultOrder=\"desc\"\r\n                    defaultOrderBy=\"kills\"\r\n                    ignoreSearchColumns={[\"steamId\"]}\r\n                    inputClassName={\"search-input\"}\r\n                    onRowClick={({rowData}) => console.log(rowData.name)}\r\n                />\r\n                </div>\r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Leaderboard;\r\n","import React, { useState, useEffect, } from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from 'react-all-in-one-table';\r\n\r\nfunction ServerStatus() {\r\n  const [serverInfo, setServerInfo] = useState(undefined);\r\n  const [playerList, setPlayerList] = useState(undefined);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (serverInfo) {\r\n      return\r\n    }\r\n    setLoading(true);\r\n    fetch('/api/server').then(res => res.json())\r\n      .then(data => {\r\n        setServerInfo(data[\"ServerInfo\"]);\r\n        if (data[\"Scores\"]) {\r\n          setPlayerList(data[\"Scores\"].map(p => {\r\n            let player = p[\"PlayerInfo\"];\r\n            let kda = player[\"KDA\"].split(\"/\");\r\n            return {\r\n              kills: kda[0],\r\n              deaths: kda[1],\r\n              points: player[\"Score\"],\r\n              steamId: player[\"UniqueId\"],\r\n              name: player[\"PlayerName\"],\r\n              team: player[\"TeamId\"]\r\n            }\r\n          }));\r\n        }\r\n\r\n      }).finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [serverInfo]);\r\n\r\n  let isDesktop = window.matchMedia(\"(min-width: 1281px)\").matches;\r\n  const columns = [\r\n    { dataKey: 'name', label: 'Player', width: isDesktop ? 400 : 200 },\r\n    { dataKey: 'kills', label: isDesktop ? 'Kills' : \"K\", width: isDesktop ? 300 : 100 },\r\n    { dataKey: 'deaths', label: 'Deaths', width: isDesktop ? 300 : 100 },\r\n    { dataKey: 'points', label: 'Points', width: isDesktop ? 300 : 100 },\r\n  ]\r\n\r\n\r\n  return (\r\n    <div>\r\n      {serverInfo &&\r\n        <div className=\"header\">\r\n          <Typography variant='h6' gutterBottom>{serverInfo[\"ServerName\"]}</Typography>\r\n          <p>Map: {serverInfo[\"MapLabel\"]}</p>\r\n          <p>Mode: {serverInfo[\"GameMode\"]}</p>\r\n          <p>Players: {serverInfo[\"PlayerCount\"]}</p>\r\n        </div>\r\n      }\r\n      {loading &&\r\n        <CircularProgress color='secondary' />\r\n      }\r\n      {!loading && playerList && playerList.length > 0 &&\r\n        <div style={{ height:  (40+(40 * playerList.length)).toString()+\"px\", maxHeight: '520px'}}>\r\n          <Table\r\n            showSearch={false}\r\n            data={playerList}\r\n            columns={columns}\r\n            defaultOrderBy=\"kills\"\r\n          />\r\n        </div>\r\n      }\r\n    </div>\r\n\r\n  );\r\n}\r\nexport default ServerStatus;\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport {\r\n  withRouter\r\n} from \"react-router-dom\";\r\n\r\nfunction Navigation(props) {\r\n  const navigate = (page) => {\r\n    props.toggleDrawer()\r\n    props.history.push(page)\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <Drawer\r\n        className={\"drawer mobile\"}\r\n        variant=\"temporary\"\r\n        anchor=\"left\"\r\n        open={props.open}\r\n        classes={{ paper: \"drawer\" }}\r\n      >\r\n        <Toolbar />\r\n                <List>\r\n            <ListItem button onClick={() => navigate(\"/\")}>\r\n                <ListItemText primary={\"Home\"}  />\r\n            </ListItem>\r\n            <ListItem button onClick={() => navigate(\"/server\")}>\r\n                <ListItemText primary={\"Server Status\"}  />\r\n            </ListItem>\r\n            <ListItem button onClick={() => navigate(\"/leaderboard\")}>\r\n                <ListItemText primary={\"Leaderboard\"} />\r\n            </ListItem>\r\n          </List> \r\n      </Drawer>\r\n    <Drawer\r\n        className={\"drawer desktop\"}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={true}\r\n        classes={{ paper: \"drawer\" }}\r\n      >\r\n        <Toolbar />\r\n                <List>\r\n            <ListItem button onClick={() =>  navigate(\"/\")}>\r\n                <ListItemText primary={\"Home\"}  />\r\n            </ListItem>\r\n            <ListItem button onClick={() => navigate(\"/server\")}>\r\n                <ListItemText primary={\"Server Status\"}  />\r\n            </ListItem>\r\n            <ListItem button onClick={() => navigate(\"/leaderboard\")}>\r\n                <ListItemText primary={\"Leaderboard\"} />\r\n            </ListItem>\r\n          </List> \r\n      </Drawer>\r\n      </React.Fragment>\r\n    \r\n  );\r\n}\r\n\r\nexport default withRouter(Navigation);\r\n","import React from 'react';\nimport './App.css';\nimport Leaderboard from './components/Leaderboard';\nimport ServerStatus from './components/ServerStatus';\nimport Navigation from './components/Navigation';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport clsx from 'clsx';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nfunction App(props) {\n  const [open, setOpen] = React.useState(false);\n  return (\n    <Router>\n      <div className=\"App\">\n        <AppBar\n          position=\"fixed\"\n          className={clsx(\"appBar\", open && \"appBarshift\")}\n        >\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={() => setOpen(!open)}\n              edge=\"start\"\n              className={clsx(\"menuButton mobile\")}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" noWrap>\n              VR Together\n          </Typography>\n          </Toolbar>\n        </AppBar>\n        <Navigation toggleDrawer={() => setOpen(!open)} open={open} />\n        <Toolbar />\n        <Switch>\n          <Route path=\"/leaderboard\">\n            <Container>\n              <Leaderboard />\n            </Container>\n          </Route>\n          <Route path=\"/server\">\n            <Container>\n              <ServerStatus />\n            </Container>\n          </Route>\n          <Route path=\"/\">\n            <Container>\n              <Typography style={{ marginBottom: '36px' }} className=\"header\" variant='h4'>VR-Together</Typography>\n              <iframe src=\"https://discord.com/widget?id=827686879188877334&theme=dark\" width=\"350\" height=\"500\" allowtransparency=\"true\" frameborder=\"0\" sandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\"></iframe>\n            </Container>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import * as React from 'react'\r\nimport * as _ from 'lodash';\r\nimport './styles.scss'\r\nimport { AutoSizer, Column, Table } from 'react-virtualized';\r\n\r\nconst { useState, useEffect } = React\r\n\r\nexport type ITableProps = {\r\n    defaultOrder?: \"desc\" | \"asc\" | undefined\r\n    defaultOrderBy?: string\r\n    defaultSearchTerm?: string\r\n    data: any[]\r\n    columns: { dataKey: string, label: string, width: number }[]\r\n    ignoreSearchColumns?: string[]\r\n    showSearch?: boolean\r\n    inputClassName?: string\r\n    onRowClick?: () => any;\r\n}\r\n\r\nconst App: React.FC<ITableProps> = ({ data, columns, showSearch = true, ignoreSearchColumns = undefined, defaultOrder = 'asc', defaultOrderBy = '', inputClassName = '', onRowClick = undefined, defaultSearchTerm = \"\" }) => {\r\n    const [filteredData, setFilteredData] = useState<any[]>([]);\r\n    const [searchTerm, setSearchTerm] = useState(defaultSearchTerm)\r\n    const [sortedData, setSortedData] = useState<any[]>([]);\r\n    const [orderBy, setOrderBy] = useState(defaultOrderBy);\r\n    const [order, setOrder] = useState<\"desc\" | \"asc\">(defaultOrder);\r\n\r\n    useEffect(() => {\r\n        let filtered = data;\r\n        if (showSearch) {\r\n            filtered = _.filter(data, (d: any) => {\r\n                let match = false;\r\n                let keys = Object.keys(d);\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    if (match) break;\r\n                    if (ignoreSearchColumns) {\r\n                        if (ignoreSearchColumns.indexOf(keys[i]) > -1) continue;\r\n                    }\r\n                    if (d[keys[i]]) {\r\n                        if (d[keys[i]].toString().toLowerCase().indexOf(searchTerm.toLowerCase()) > -1) {\r\n                            match = true;\r\n                        }\r\n                    }\r\n                }\r\n                return match;\r\n            })\r\n        }\r\n        setFilteredData(filtered)\r\n    }, [searchTerm, data, ignoreSearchColumns, showSearch]);\r\n\r\n    useEffect(() => {\r\n        setSortedData(_.orderBy(filteredData, [orderBy], order));\r\n    }, [filteredData, orderBy, order])\r\n\r\n    const handleSort = ({ sortBy }: { sortBy: string }) => {\r\n        setOrder((orderBy === sortBy && order === 'asc') ? 'desc' : 'asc');\r\n        setOrderBy(sortBy);\r\n    };\r\n\r\n    return (\r\n        <div style={{ height: '100%' }}>\r\n            {showSearch &&\r\n                <input\r\n                    placeholder=\"Search\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                    type=\"text\"\r\n                    className={inputClassName}\r\n                    style={{ marginBottom: '8px' }}\r\n                />\r\n            }\r\n            {filteredData.length > 0 &&\r\n                <AutoSizer>\r\n                    {({ width, height }: { height: number, width: number }) => (\r\n                        <Table\r\n                            height={height}\r\n                            width={width}\r\n                            rowHeight={40}\r\n                            headerHeight={40}\r\n                            sortBy={orderBy}\r\n                            sort={handleSort}\r\n                            rowCount={sortedData.length}\r\n                            rowGetter={({ index }: { index: number }) => sortedData[index]}\r\n                            onRowClick={onRowClick}\r\n                        >\r\n                            {columns.map(({ dataKey, label, width }: { dataKey: string, label: string, width: number }) => {\r\n                                return (\r\n                                    <Column\r\n                                        width={width ? width : 200}\r\n                                        key={dataKey}\r\n                                        dataKey={dataKey}\r\n                                        label={label}\r\n                                    />\r\n                                );\r\n                            })}\r\n                        </Table>\r\n                    )}\r\n                </AutoSizer>\r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default App"],"sourceRoot":""}